@using Microsoft.AspNetCore.Identity;
@using ReviewMuse.Data.Models;
@using ReviewMuse.Services.Contracts;

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserService UserService

@model ExpoSingleBookViewModel

@{
    ViewData["Title"] = $"{Model.Title} - ReviewMuse";

    string bookId = this.Model.BookId!;

    bool hasBookFavourite = await UserService.UserHasBookAsFavouriteAsync(bookId, UserManager.GetUserId(this.User));

}

<div class="container-fluid bookDetails">

    <div class="container-fluid row" style="margin-bottom:100px">
        <div class="col-md-3 sticky bookPhoto">
            <img src="@Model.ImageUrl" alt="@Model.Title" class="img-fluid" width="250" height="400">
            @if (SignInManager.IsSignedIn(User))
            {


                if (hasBookFavourite)
                {
                    var bookStatus = await this.UserService.GetUserBookStatus(UserManager.GetUserId(this.User), bookId);

                    <form asp-controller="User" asp-action="UpdateFavouriteBook" asp-route-id="@Model.BookId" method="post" class="form favForm">
                        <div>
                            <input type="hidden" asp-for="BookId" />
                        </div>
                        <div>
                            <select asp-for="BookStatus" style="margin-left:15px">
                                <option value="" selected disabled>@bookStatus</option>
                                <option value="3">Want to Read</option>
                                <option value="1">Reading</option>
                                <option value="2">Read</option>
                            </select>
                        </div>
                        <div>
                            <button type="submit" class="addToFavButton">Update status</button>
                        </div>
                    </form>

                }
                else
                {
                    <form asp-controller="User" asp-action="AddToFavourites" asp-route-id="@Model.BookId" method="post" class="form favForm">
                        <div>
                            <input type="hidden" asp-for="BookId" />
                        </div>
                        <div>
                            <select asp-for="BookStatus" style="margin-left:25px">
                                <option value="3">Want to Read</option>
                                <option value="1">Reading</option>
                                <option value="2">Read</option>
                            </select>
                        </div>
                        <div>
                            <button type="submit" class="addToFavButton">Add to Collection</button>
                        </div>
                    </form>
                }
            }
            <div class="amazonBtn">
                @if (Model.AmazonLink != null)
                {
                    <a href="@Model.AmazonLink" target="_blank" class="btn btn-warning">
                        <img src="~/amazon-logo.png" alt="Amazon" class="amazon-logo"> Buy on Amazon
                    </a>
                }
            </div>
        </div>

        <div class="col-md-8 mainDetails">

            <h1 class="bookTitle">@Model.Title</h1>

            @foreach (var author in Model.AuthorsNames)
            {

                <h2 class="authorName">@author.AuthorPseudonim</h2>

            }

            <p class="bookMetadata">@Model.BookReviews.Count() Reviews, Total Rating: @Model.TotalRating &nbsp;<span class="glyphicon glyphicon-star"></span></p>

            <div id="ReadMore" class="row container-fluid " style="margin-right:50px">
                @Model.Description.Substring(0, 1050);
            </div>

            <div id="ReadLess" class="row container-fluid " style="margin-right:50px">
                @Model.Description
                <span id="dots">...</span>

            </div>

            <div>

                <button onclick="myFunction()" id="myBtn" class="btn">See more</button>

            </div>

            <div class="row container-fluid moreDetails panel panel-default">

                <p><strong>Book Details:</strong></p>

                <p>First published @Model.PublishingDate</p>

                <p>
                    <strong>Ganres:&nbsp;&nbsp;</strong>

                    @foreach (var ganre in Model.CategoriesNames)
                    {
                        <a asp-controller="Categories" asp-action="GetCategoryById" asp-route-id="@ganre.Id">
                            <span>@ganre.CategoryName &nbsp;&nbsp;</span>
                        </a>
                    }
                </p>

                <p><strong>Pages: </strong>@Model.PagesCount</p>

                <p><strong>Cover Type: </strong> @Model.CoverType</p>

                <p><strong>ISBN: </strong> @Model.ISBN</p>

                <p><strong>Language: </strong> @Model.Language</p>

            </div>
            <div class="row container-fluid panel panel-default">

                <p><strong>More about the Author:</strong></p>

                <partial name="_AuthorPartialView" model="@Model"></partial>

            </div>
            <div class="userLogged">

                @if (SignInManager.IsSignedIn(User))
                {
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#reviewModal" style="margin-left:380px">
                        Write a Review
                    </button>
                }
                else
                {
                    <h3 class="authorName">Join us in order to write reviews!</h3>

                    <button type="button" class="btn btn-primary">
                        <a class="text-dark" asp-area="Identity" asp-page="/Account/Register">Sign In</a>
                    </button>

                    <button type="button" class="btn btn-primary">
                        <a class="text-dark" asp-area="Identity" asp-page="/Account/Login"> Login</a>
                    </button>

                }
            </div>

            <div class="modal fade" id="reviewModal" tabindex="-1" role="dialog" aria-labelledby="reviewModalLabel" aria-hidden="true">

                <div class="modal-dialog">

                    <div class="modal-content">

                        <div class="modal-header">

                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">

                                <span aria-hidden="true">&times;</span>

                            </button>

                            <h4 class="modal-title" id="reviewModalLabel" style="font-family:'Times New Roman', Times, serif">Review</h4>

                        </div>

                        <div class="modal-body">

                            <form method="post" asp-controller="Review" asp-action="CreateReivew">

                                <label asp-for="@Model.UserReview.Rating">Rating</label>
                                <div class="form-group">

                                    <div class="rating panel panel-default">
                                        <input type="radio" id="star5" name="Rating" value="5" />
                                        <label for="star5" title="5 stars"></label>

                                        <input type="radio" id="star4" name="Rating" value="4" />
                                        <label for="star4" title="4 stars"></label>

                                        <input type="radio" id="star3" name="Rating" value="3" />
                                        <label for="star3" title="3 stars"></label>

                                        <input type="radio" id="star2" name="Rating" value="2" />
                                        <label for="star2" title="2 stars"></label>

                                        <input type="radio" id="star1" name="Rating" value="1" />
                                        <label for="star1" title="1 star"></label>
                                    </div>
                                </div>
                                <input type="hidden" id="ratingInput" asp-for="@Model.UserReview.Rating" />
                                <input type="hidden" name="bookId" value="@Model.BookId" />

                                <div class="form-group">

                                    <label for="reviewText">Write your review here:</label>

                                    <textarea asp-for="@Model.UserReview.Comment" class="form-control" id="reviewText" rows="5"></textarea>
                                    <span asp-validation-for="@Model.UserReview.Comment" class="text-danger"></span>

                                </div>
                                <div class="reviewBullets">
                                    <p>* Be respectful while writing review.</p>
                                    <p>* Do not use insulting words in your reviews.</p>
                                    <p>* Do not use the review section to form arugments again other users.</p>
                                    <p>* Not following the rules will result in deletion of this review.</p>
                                </div>

                                <div class="modal-footer">

                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>

                                    <button type="submit" class="btn btn-primary">Submit Review</button>

                                </div>
                            </form>

                        </div>

                    </div>

                </div>

            </div>

            <h3 class="reviewsZone">Reviews:</h3>
            @if (!Model.BookReviews.Any())
            {
                <p class="emptyBooks">Be the first one to review this book!</p>
            }
            else
            {
                <partial name="_ReviewViewModel" model="@Model" />
            }

        </div>


    </div>

</div>


<script>
    function myFunction() {
        var dots = document.getElementById("dots");
        var btnText = document.getElementById("myBtn");
        var ReadMore = document.getElementById("ReadMore");
        var ReadLess = document.getElementById("ReadLess");

        if (ReadMore.style.display === "none") {
            dots.style.display = "inline";
            ReadLess.style.display = "none";
            btnText.innerHTML = "Read More";
            ReadMore.style.display = "inline";
        } else {
            dots.style.display = "none";
            ReadMore.style.display = "none";
            btnText.innerHTML = "Read less";
            ReadLess.style.display = "inline";
        }
    }
</script>

@section Scripts {
    <script>
        const stars = document.querySelectorAll('.rating input[type="radio"]');
        const ratingInput = document.getElementById('ratingInput');

        stars.forEach(star => star.addEventListener('click', updateRating));

        function updateRating() {
            const selectedRating = document.querySelector('.rating input[type="radio"]:checked').value;
            ratingInput.value = selectedRating;
        }
    </script>
}
